- carregar o número de vacas em lactação no lançamento de entrega de leite

- Ao clicar sobre a quantidade de animais vendidos (tabela vendas) exibir os animais;
- forçar reload dados atualizados em outras telas (atualizar os mapeamentos);

- Alteração de quantidade de semen - atualizar registro na despesa (se despesa já tiver sido paga não deixar alterar)
- três casas decimais valor do leite

- configurar as pesquisas em todos os cadastros;

- na venda fazer a somatória de animais vendidos e do valor total

- como calcular os dias entre partos, secos.. quando o animal foi vendido?
- permitir cadastro dos valores de referencia nos indicadores;

- fazer cadastro de procedimento
- gráfico curva lactação animais por parto

- numero de partos animal

- erro casas decimais valor leite ex: 0,80

- como resolver: Entre cada parto a vaca só pode ter um encerramento lactação:
	- só pode cadastrar o encerramento da lactação se tiver em lactação - isso garante que existui um parto antes do encerramento;
	- uma vez seco, o animal só mudará de status se remover o registro de encerramento ou tiver o parto cadastrado;
	- depois que a vaca pariu não pode mexer no registro de encerramento da lactação;
	- quando cadastrar o parto, verificar se o animal esteve seco;
	
- indicadores:
	- Dias secas (em aberto);
	- Dias em lactação;
	- Intervalo entre partos;
	- % de vacas rebanho;
	- % de vacas em lactação;
	- taxa de prenhez;
	- idade primeiro parto;
	- animais até determinada idade
	
	
Obs: para os indicadores funcionarem é necessário cadastrar pelo menos
cobertura -> parto -> cobertura -> encerramento -> parto
	
	
	
	
	
	
	
	
	
	
	
		
		
		
		
		
		
		
		Parto ultimoParto = 
		
		
		
		
		
		Date dataInicio = DateUtil.asDate(LocalDate.of(LocalDate.now().getYear(), 01, 01));
		Date dataFim    = DateUtil.asDate(LocalDate.of(LocalDate.now().getYear(), 12, 31));
		
		Date dataUltimoParto = null;
		Date dataUltimoEncerramento = null;
		String ultimaOcorrencia = null;
		
		//tenta localizar a ultima ocorrencia - parto ou encerramento antes da data inicial
		Query query = entityManager.createQuery("SELECT p.cobertura.femea.id, p.data FROM Parto p where p.data < :dataInicio order by p.data desc");
		query.setParameter("dataInicio", dataInicio);
		query.setMaxResults(1);
		
		Object[] ultimoParto = (Object[]) query.getSingleResult();
		
		query = entityManager.createQuery("SELECT e.animal.id, e.data FROM EncerramentoLactacao e where e.data < :datInicio order by e.data desc");
		query.setParameter("dataInicio", dataInicio);
		
		Object[] ultimoEncerramento = (Object[]) query.getSingleResult();
		
		//armazena a data da ultima ocorrencia, parto ou encerramento
		if ( ultimoParto != null ){
			if ( ultimoEncerramento != null ){
				if ( ((Date)ultimoParto[1]).after((Date)ultimoEncerramento[1]) ){
					dataUltimoParto = (Date)ultimoParto[1];
				}else{
					dataUltimoEncerramento = (Date)ultimoEncerramento[1];
				}
			}else{
				dataUltimoParto = (Date)ultimoParto[1];
			}
		}else{
			if ( ultimoEncerramento != null ){
				dataUltimoEncerramento = (Date)ultimoEncerramento[1];
			}
		}
		
		
		if ( dataUltimoParto != null ){
			
		}
		
		
		
		
		
		
		List<Object[]> ultimoParto = .getResultList();
		List<Object[]> encerramentos = entityManager.createQuery("SELECT e.animal.id, e.data FROM EncerramentoLactacao e order by e.data").getResultList();
		
		BigDecimal diasEmLactacao = BigDecimal.ZERO;
		
		for ( Object[] parto : partos ){
			
			int parto_animal = (int)parto[0];
		    Date parto_data  = (Date)parto[1];
		    
			Date data_proximo_encerramento = null;
			int index = 0;
			
			for ( Object[] encerramento : encerramentos ){
				
				int encerramento_animal = (int)encerramento[0];
			    Date encerramento_data  = (Date)encerramento[1];
			    
			    if ( encerramento_animal == parto_animal && parto_data.before(encerramento_data) ){
			    	data_proximo_encerramento = encerramento_data;
			    	break;
			    }
			    index++;
			}
			
			if ( encerramentos.size() > index )
				encerramentos.remove(index);
			    
		    if ( data_proximo_encerramento != null ){
		    	diasEmLactacao = diasEmLactacao.add(BigDecimal.valueOf(ChronoUnit.DAYS.between(DateUtil.asLocalDate(parto_data), DateUtil.asLocalDate(data_proximo_encerramento))));
		    }else{
		    	diasEmLactacao = diasEmLactacao.add(BigDecimal.valueOf(ChronoUnit.DAYS.between(DateUtil.asLocalDate(parto_data), LocalDate.now())));
		    }
			
		}
		
		return diasEmLactacao;
	
